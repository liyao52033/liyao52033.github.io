(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{561:function(a,e,s){"use strict";s.r(e);var t=s(4),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),e("p",[a._v("使用 "),e("code",[a._v("patch-package")]),a._v(" 修改第三方模块，及时解决第三方依赖包的 bug")])]),a._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("el-tabs",[e("el-tab-pane",{attrs:{label:"yarn"}},[e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dev")]),a._v(" patch-package postinstall-postinstall\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("el-tab-pane",{attrs:{label:"npm"}},[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" patch-package --save-dev\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])])],1),a._v(" "),e("h2",{attrs:{id:"创建补丁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建补丁"}},[a._v("#")]),a._v(" 创建补丁")]),a._v(" "),e("p",[a._v("直接在项目根目录下的 "),e("code",[a._v("node_modules")]),a._v(" 文件夹中找到要修改依赖包的相关文件，然后回到根目录执行")]),a._v(" "),e("el-tabs",[e("el-tab-pane",{attrs:{label:"yarn"}},[e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" patch-package package-name\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("el-tab-pane",{attrs:{label:"npm"}},[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("npx patch-package package-name\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])])],1),a._v(" "),e("p",[e("code",[a._v("package-name")]),a._v(" 就是要修改的依赖包名\n执行完成后，会在项目根目录的 "),e("code",[a._v("patches")]),a._v(" 目录中创建补丁文件 "),e("code",[a._v("package-name+0.44.0.patch")]),a._v("（0.44.0 是依赖包版本），这个补丁需要提交到代码仓库中")]),a._v(" "),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[a._v("#")]),a._v(" options")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--use-yarn")]),a._v(" "),e("code",[a._v("patch-package")]),a._v(" 默认是根据项目中的 lockfile 来决定使用 npm 还是 yarn，如果两种都有，则使用 npm，可以通过这个参数启用 yarn")]),a._v(" "),e("li",[e("code",[a._v("--exclude <regexp>")]),a._v("\n创建补丁文件时，忽略与正则表达式匹配的路径，路径相对于要修改的依赖包的根目录，默认: "),e("code",[a._v("package\\\\.json$")])]),a._v(" "),e("li",[e("code",[a._v("--include <regexp>")]),a._v("\n与 "),e("code",[a._v("--exclude <regexp>")]),a._v(" 相反，创建补丁文件时仅考虑与正则表达式匹配的路径，默认: "),e("code",[a._v(".*")])]),a._v(" "),e("li",[e("code",[a._v("--case-sensitive-path-filtering")]),a._v("\n使 "),e("code",[a._v("--include")]),a._v(" 或 "),e("code",[a._v("--exclude")]),a._v(" 中使用的正则表达式区分大小写")]),a._v(" "),e("li",[e("code",[a._v("--patch-dir")]),a._v("\n指定放置补丁文件的目录")])]),a._v(" "),e("h3",{attrs:{id:"嵌套模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌套模块"}},[a._v("#")]),a._v(" 嵌套模块")]),a._v(" "),e("p",[a._v("支持修改依赖包的依赖包，比如 "),e("code",[a._v("node_modules/package/node_modules/another-package")]),a._v("，通过 "),e("code",[a._v("/")]),a._v(" 分隔")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npx patch-package package/another-package\n\n# scoped packages\nnpx patch-package @my/package/@my/other-package\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h2",{attrs:{id:"更新补丁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新补丁"}},[a._v("#")]),a._v(" 更新补丁")]),a._v(" "),e("p",[a._v("与创建补丁过程一样")]),a._v(" "),e("h2",{attrs:{id:"打补丁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打补丁"}},[a._v("#")]),a._v(" 打补丁")]),a._v(" "),e("p",[a._v("不带参数执行 "),e("code",[a._v("npx patch-package")]),a._v(" 或者 "),e("code",[a._v("yarn patch-package")]),a._v(" 应用所有补丁")]),a._v(" "),e("h3",{attrs:{id:"options-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-2"}},[a._v("#")]),a._v(" options")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--reverse")]),a._v("\n撤回所有补丁\nNote: 如果打补丁后，补丁文件被修改过，此操作将失败，此时可以重新安装 node_modules")]),a._v(" "),e("li",[e("code",[a._v("--patch-dir")]),a._v("\n指定补丁文件所在目录")])]),a._v(" "),e("h2",{attrs:{id:"部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[a._v("#")]),a._v(" 部署")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("package.json")]),a._v(" 的 "),e("code",[a._v("scripts")]),a._v(" 中加入 "),e("code",[a._v('"postinstall": "patch-package"')]),a._v("，后续执行 "),e("code",[a._v("npm install")]),a._v(" 或 "),e("code",[a._v("yarn install")]),a._v(" 命令时，会自动为依赖包打补丁了")])],1)}),[],!1,null,null,null);e.default=n.exports}}]);