(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{623:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("基于STM32F429II的GPIO配置与使用的代码示例，包括输入模式、输出模式和外部中断模式的实现。代码基于HAL库开发。")]),t._v(" "),s("h2",{attrs:{id:"gpio输出模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpio输出模式"}},[t._v("#")]),t._v(" GPIO输出模式")]),t._v(" "),s("p",[t._v("以下代码将GPIOA的第0引脚配置为推挽输出模式，并控制其输出高电平和低电平。")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stm32f4xx_hal.h"')])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化HAL库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置系统时钟")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化GPIO")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_WritePin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_SET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置GPIOA的第0引脚为高电平")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延时1秒")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_WritePin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_RESET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置GPIOA的第0引脚为低电平")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延时1秒")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_InitTypeDef GPIO_InitStruct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使能GPIOA时钟")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_RCC_GPIOA_CLK_ENABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置GPIOA的第0引脚为推挽输出模式，无上拉下拉，速度为高速")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_MODE_OUTPUT_PP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_NOPULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_SPEED_FREQ_HIGH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br")])]),s("h2",{attrs:{id:"gpio输入模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpio输入模式"}},[t._v("#")]),t._v(" GPIO输入模式")]),t._v(" "),s("p",[t._v("以下代码将GPIOB的第0引脚配置为输入模式，并读取其电平状态。")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stm32f4xx_hal.h"')])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化HAL库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置系统时钟")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化GPIO")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_ReadPin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" GPIO_PIN_SET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果GPIOB的第0引脚为高电平")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_WritePin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_SET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点亮GPIOA的第0引脚")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果GPIOB的第0引脚为低电平")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_WritePin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_RESET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 熄灭GPIOA的第0引脚")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延时100ms")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_InitTypeDef GPIO_InitStruct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使能GPIOA和GPIOB时钟")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_RCC_GPIOA_CLK_ENABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_RCC_GPIOB_CLK_ENABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置GPIOA的第0引脚为推挽输出模式")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_MODE_OUTPUT_PP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_NOPULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_SPEED_FREQ_HIGH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置GPIOB的第0引脚为输入模式，上拉")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_MODE_INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PULLUP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br")])]),s("h2",{attrs:{id:"gpio外部中断模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpio外部中断模式"}},[t._v("#")]),t._v(" GPIO外部中断模式")]),t._v(" "),s("p",[t._v("以下代码将GPIOC的第13引脚配置为外部中断模式，当检测到下降沿时触发中断。")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stm32f4xx_hal.h"')])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EXTI15_10_IRQHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化HAL库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置系统时钟")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化GPIO")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主循环")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_InitTypeDef GPIO_InitStruct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使能GPIOC时钟")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_RCC_GPIOC_CLK_ENABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置GPIOC的第13引脚为输入模式，上拉")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_13"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_MODE_IT_FALLING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置为下降沿中断")]),t._v("\n    GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PULLUP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("GPIO_InitStruct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置中断优先级")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_NVIC_SetPriority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXTI15_10_IRQn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使能中断")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_NVIC_EnableIRQ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXTI15_10_IRQn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EXTI15_10_IRQHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_GPIO_EXTI_GET_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIO_PIN_13"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" RESET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查是否为GPIOC的第13引脚触发的中断")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_GPIO_EXTI_CLEAR_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIO_PIN_13"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清除中断标志位")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 中断处理代码")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_TogglePin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换GPIOA的第0引脚电平")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br")])]),s("h2",{attrs:{id:"常见的gpio输出模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的gpio输出模式"}},[t._v("#")]),t._v(" 常见的GPIO输出模式")]),t._v(" "),s("p",[t._v("STM32的GPIO输出模式主要有以下几种，这些模式通过"),s("code",[t._v("GPIO_InitTypeDef")]),t._v("结构体中的"),s("code",[t._v("Mode")]),t._v("字段进行配置。以下是常见的输出模式及其特点：")]),t._v(" "),s("h3",{attrs:{id:"_1-普通推挽输出-gpio-mode-output-pp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-普通推挽输出-gpio-mode-output-pp"}},[t._v("#")]),t._v(" 1. "),s("strong",[t._v("普通推挽输出（"),s("code",[t._v("GPIO_MODE_OUTPUT_PP")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点")]),t._v("：\n"),s("ul",[s("li",[t._v("推挽输出模式下，GPIO引脚可以输出高电平或低电平。")]),t._v(" "),s("li",[t._v("驱动能力较强，适合驱动LED、继电器等负载。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("需要驱动外部设备（如LED灯、继电器等）。")]),t._v(" "),s("li",[t._v("需要快速切换电平的场合。")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-普通开漏输出-gpio-mode-output-od"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-普通开漏输出-gpio-mode-output-od"}},[t._v("#")]),t._v(" 2. "),s("strong",[t._v("普通开漏输出（"),s("code",[t._v("GPIO_MODE_OUTPUT_OD")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点")]),t._v("：\n"),s("ul",[s("li",[t._v("开漏模式下，GPIO引脚只能输出低电平或高阻态（浮空）。")]),t._v(" "),s("li",[t._v("需要通过外部上拉电阻将引脚拉高到高电平。")]),t._v(" "),s("li",[t._v("适合用于I²C通信、多设备共享总线等场景。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("I²C通信（SCL和SDA线）。")]),t._v(" "),s("li",[t._v("多设备共享总线，避免电平冲突。")]),t._v(" "),s("li",[t._v("需要通过外部上拉电阻控制电平的场合。")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-复用推挽输出-gpio-mode-af-pp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-复用推挽输出-gpio-mode-af-pp"}},[t._v("#")]),t._v(" 3. "),s("strong",[t._v("复用推挽输出（"),s("code",[t._v("GPIO_MODE_AF_PP")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点")]),t._v("：\n"),s("ul",[s("li",[t._v("复用推挽模式下，GPIO引脚被配置为复用功能（如SPI、USART、PWM等），并以推挽方式输出。")]),t._v(" "),s("li",[t._v("驱动能力较强，适合高速信号传输。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("配置为SPI的MOSI、USART的TX、PWM输出等复用功能时。")]),t._v(" "),s("li",[t._v("需要高速信号输出的场合。")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-复用开漏输出-gpio-mode-af-od"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-复用开漏输出-gpio-mode-af-od"}},[t._v("#")]),t._v(" 4. "),s("strong",[t._v("复用开漏输出（"),s("code",[t._v("GPIO_MODE_AF_OD")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点")]),t._v("：\n"),s("ul",[s("li",[t._v("复用开漏模式下，GPIO引脚被配置为复用功能（如I²C、CAN等），并以开漏方式输出。")]),t._v(" "),s("li",[t._v("需要通过外部上拉电阻将引脚拉高到高电平。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("I²C通信（SCL和SDA线）。")]),t._v(" "),s("li",[t._v("配置为CAN通信时。")]),t._v(" "),s("li",[t._v("其他需要开漏输出的复用功能。")])])])]),t._v(" "),s("h3",{attrs:{id:"_5-模拟模式-gpio-mode-analog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-模拟模式-gpio-mode-analog"}},[t._v("#")]),t._v(" 5. "),s("strong",[t._v("模拟模式（"),s("code",[t._v("GPIO_MODE_ANALOG")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点")]),t._v("：\n"),s("ul",[s("li",[t._v("模拟模式下，GPIO引脚被配置为模拟输入/输出功能。")]),t._v(" "),s("li",[t._v("通常用于ADC（模数转换）或DAC（数模转换）功能。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("配置为ADC输入引脚时。")]),t._v(" "),s("li",[t._v("配置为DAC输出引脚时。")])])])]),t._v(" "),s("h3",{attrs:{id:"_6-备用功能-gpio-mode-it"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-备用功能-gpio-mode-it"}},[t._v("#")]),t._v(" 6. "),s("strong",[t._v("备用功能（"),s("code",[t._v("GPIO_MODE_IT_*")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点")]),t._v("：\n"),s("ul",[s("li",[t._v("GPIO引脚被配置为中断或事件检测功能（如上升沿、下降沿、双边沿中断）。")]),t._v(" "),s("li",[t._v("不是传统意义上的“输出模式”，但可以用于中断触发。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("需要检测外部信号变化（如按键按下、信号跳变）时。")])])])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("STM32的GPIO输出模式主要包括普通推挽输出、普通开漏输出、复用推挽输出和复用开漏输出。选择哪种模式取决于你的具体需求：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("推挽输出")]),t._v("：适合驱动负载或需要快速切换电平的场合。")]),t._v(" "),s("li",[s("strong",[t._v("开漏输出")]),t._v("：适合多设备共享总线或需要外部上拉电阻的场合。")]),t._v(" "),s("li",[s("strong",[t._v("复用功能")]),t._v("：用于SPI、USART、I²C、PWM等外设功能。")]),t._v(" "),s("li",[s("strong",[t._v("模拟模式")]),t._v("：用于ADC或DAC功能。")])]),t._v(" "),s("p",[t._v("在实际开发中，需要根据具体的应用场景选择合适的GPIO模式。")]),t._v(" "),s("h2",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("时钟配置")]),t._v("："),s("code",[t._v("SystemClock_Config()")]),t._v("函数需要根据你的硬件配置系统时钟，确保GPIO时钟正常工作。")]),t._v(" "),s("li",[s("strong",[t._v("中断优先级")]),t._v("：在使用外部中断时，需合理配置中断优先级，避免影响系统稳定性。")]),t._v(" "),s("li",[s("strong",[t._v("延时函数")]),t._v("："),s("code",[t._v("HAL_Delay()")]),t._v("函数依赖于系统滴答定时器（SysTick），需要确保其已正确配置。")])]),t._v(" "),s("p",[t._v("以上代码基于HAL库开发，适用于STM32F429II芯片。")])])}),[],!1,null,null,null);s.default=e.exports}}]);